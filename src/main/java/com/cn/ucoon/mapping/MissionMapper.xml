<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.ucoon.dao.MissionMapper" >
	<resultMap id="BaseResultMap" type="com.cn.ucoon.pojo.Mission" >
		<id column="mission_id" property="missionId" jdbcType="INTEGER" />
		<result column="mission_type_id" property="missionTypeId" jdbcType="INTEGER" />
		<result column="mission_title" property="missionTitle" jdbcType="VARCHAR" />
		<result column="mission_describe" property="missionDescribe" jdbcType="VARCHAR" />
		<result column="pictures" property="pictures" jdbcType="VARCHAR" />
		<result column="pic_count" property="picCount" jdbcType="INTEGER" />
		<result column="people_count" property="peopleCount" jdbcType="INTEGER" />
		<result column="place" property="place" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="view_count" property="viewCount" jdbcType="INTEGER" />
		<result column="mission_price" property="missionPrice" jdbcType="DECIMAL" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="mission_status" property="missionStatus" jdbcType="INTEGER" />
		<result column="mission_lng" property="missionLng" jdbcType="VARCHAR" />
		<result column="mission_lat" property="missionLat" jdbcType="VARCHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >delete from mission
    where mission_id = #{missionId,jdbcType=INTEGER}</delete>
	<insert id="insert" parameterType="com.cn.ucoon.pojo.Mission" >
		<selectKey resultType="java.lang.Integer" keyProperty="missionId" order="AFTER">  
                SELECT LAST_INSERT_ID()  
        </selectKey>  
		insert into mission (mission_id, mission_type_id, mission_title, mission_describe,
		pictures,pic_count, people_count, place, start_time, end_time, publish_time, user_id,
		view_count, mission_price , telephone,mission_status,mission_lng,mission_lat) values (#{missionId,jdbcType=INTEGER},
		#{missionTypeId,jdbcType=INTEGER}, #{missionTitle,jdbcType=VARCHAR}, #{missionDescribe,jdbcType=VARCHAR},
		#{pictures,jdbcType=VARCHAR}, #{picCount,jdbcType=INTEGER},#{peopleCount,jdbcType=INTEGER},
		#{place,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
		#{publishTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER},
		#{missionPrice,jdbcType=DECIMAL},#{telephone,jdbcType=VARCHAR}, #{missionStatus,jdbcType=INTEGER},#{missionLng,jdbcType=VARCHAR},#{missionLat,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.cn.ucoon.pojo.Mission" >
		update mission set mission_type_id = #{missionTypeId,jdbcType=INTEGER}, mission_title
		= #{missionTitle,jdbcType=VARCHAR}, mission_describe = #{missionDescribe,jdbcType=VARCHAR},
		pictures = #{pictures,jdbcType=VARCHAR}, pic_count = #{picCount,jdbcType=INTEGER},
		people_count = #{peopleCount,jdbcType=INTEGER}, place = #{place,jdbcType=VARCHAR},
		start_time = #{startTime,jdbcType=TIMESTAMP}, end_time = #{endTime,jdbcType=TIMESTAMP},
		publish_time = #{publishTime,jdbcType=TIMESTAMP}, user_id = #{userId,jdbcType=INTEGER},
		view_count = #{viewCount,jdbcType=INTEGER}, mission_price = #{missionPrice,jdbcType=DECIMAL}
		, telephone = #{telephone,jdbcType=VARCHAR} ,mission_status= #{missionStatus,jdbcType=INTEGER},
		mission_lng = #{missionLng,jdbcType=VARCHAR}, mission_lat = #{missionLat,jdbcType=VARCHAR} 
		where mission_id = #{missionId,jdbcType=INTEGER}
	</update>
	<update id="updateViewByPrimaryKey" parameterType="java.lang.Integer" >
		update mission set view_count = view_count+1 WHERE  mission_id = #{missionId,jdbcType=INTEGER}
	</update>
	
	
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select * from mission where mission_id = #{missionId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap" >
		select * from mission
	</select>
	
	<!--  返回一定限定数量的mission记录  按时间顺序   index.jsp-->
	<select id="selectLimited" resultType="java.util.HashMap" >
	
		SELECT mission_id, head_img_url, mission_title, mission_describe, place, publish_time,
		mission_price,view_count,mission_lng,mission_lat,mission_status,people_count FROM mission LEFT JOIN user ON user.user_id = mission.user_id
		Where <![CDATA[ mission_status = 1 and (select COUNT(*) from apply_orders where apply_orders.mission_id = mission.mission_id and take_state = 1) < mission.people_count ]]> 
		ORDER BY publish_time DESC LIMIT #{0},#{1}
	</select>
	
	<!--  返回一定限定数量的mission记录  按距离顺序   index.jsp-->
	<select id="selectNearby" resultType="java.util.HashMap" >
		SELECT mission_id, head_img_url, mission_title, mission_describe, place, publish_time,
		mission_price,view_count,mission_status,people_count,
		ROUND(lat_lng_distance(#{0}, #{1}, mission_lat, mission_lng), 2) AS distance 
	    FROM mission LEFT JOIN user ON user.user_id = mission.user_id
	    WHERE 
	    <![CDATA[ mission_status = 1 and (select COUNT(*) from apply_orders where apply_orders.mission_id = mission.mission_id and take_state = 1) < mission.people_count and mission_lat > #{2} AND mission_lat < #{3} AND mission_lng > #{4} AND mission_lng < #{5} ]]>
	    ORDER BY distance ASC 
	    LIMIT #{6},#{7}
	</select>
	
	<!--  返回一定限定数量的mission记录   关键字    按时间顺序  index.jsp-->
	<select id="selectLimitedbyKeyWord" resultType="java.util.HashMap" >
		SELECT mission_id,head_img_url, mission_title, mission_describe, place, publish_time,
		mission_price ,view_count,mission_lng,mission_lat FROM mission LEFT JOIN user ON user.user_id = mission.user_id
		WHERE mission_title like #{0} or mission_describe like #{0} ORDER BY publish_time DESC
		LIMIT #{1},#{2}
	</select>
	
	<!--  返回一定限定数量的mission记录      Userid  	按时间顺序   mysend.jsp-全部-->
	<select id="selectLimitedbyUserId" resultType="java.util.HashMap" >
		SELECT mission_id,head_img_url, mission_title, mission_describe, place, publish_time,
		mission_price ,view_count,mission_status,mission_lng,mission_lat FROM mission LEFT JOIN user ON user.user_id
		= mission.user_id WHERE mission.user_id = #{0} ORDER BY publish_time DESC LIMIT #{1},#{2}
	</select>
	
	<!-- 返回一定限定数量的mission记录 Userid/missionStatus 按时间顺序 mysend.jsp -已上架=0,已下架=1;未支付=2;已完成=3-->
	<select id="selectLimitedbyUserIdAndStatus" parameterType="java.util.Map" resultType="java.util.HashMap" >
		SELECT mission_id,head_img_url, mission_title, mission_describe, place, publish_time,
		mission_price ,view_count,mission_status,mission_lng,mission_lat,people_count,(select count(*) from apply_orders where apply_orders.mission_id=mission.mission_id) as totalpeople,
		(select count(*) from apply_orders where apply_orders.mission_id=mission.mission_id and take_state=1) as selectpeople,
		(select count(*) from apply_orders where apply_orders.mission_id=mission.mission_id and take_state=2) as donepeople ,
		(Select  count(*) FROM evaluate WHERE publish_evaluate IS NOT NULL and LENGTH(trim(publish_evaluate))>0 and evaluate.mission_id=mission.mission_id) as evlpeople
		 FROM mission LEFT JOIN user ON user.user_id
		= mission.user_id WHERE mission.user_id = #{userId} AND 
		mission_status in  
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
       		#{item}  
   	 	</foreach>  
		ORDER BY publish_time DESC LIMIT #{startIndex},#{endIndex}
	</select>
	
	<!-- 查询mission详情   -->
	<select id="selectForMissionDetails" resultType="java.util.HashMap">
		SELECT mission_id,mission.user_id,nick_name,head_img_url,sex,mission_title,mission_price,
		view_count, people_count,place,publish_time,start_time,end_time,mission_describe,pictures,
		pic_count,mission_lng,mission_lat,
		(select count(*) from apply_orders where apply_orders.mission_id=mission.mission_id and take_state=1) as selectpeople
		FROM mission left join user on user.user_id = mission.user_id WHERE mission.mission_id
		= #{0}
	</select>
	
	
	
	<select id="selectUserIdByMissionId" resultType="java.lang.Integer">SELECT user_id FROM mission WHERE mission_id = #{0}</select>
	
	<select id="selectStatusByMissionId" resultType="java.lang.Integer">SELECT mission_status FROM mission WHERE mission_id = #{0}</select>
	
	<select id="getUserIdByMissionId" resultType="java.lang.Integer">SELECT user_id FROM mission WHERE mission_id = #{0}</select>
	
	<select id="selectUnPaidMissionByUserId" resultType="java.lang.Integer">SELECT count(*) FROM mission WHERE user_id = #{0} and mission_status=0</select>
	
	<select id="countMissionDoneByUserId" resultType="java.lang.Integer">SELECT count(*) FROM mission WHERE user_id = #{0} and mission_status=5</select>
	
	
	
</mapper>